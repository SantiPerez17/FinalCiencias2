# decodigo.com
from tkinter import *
import CalculoRutas



datosMaps = [0,0,0]

class VentanaEjemplo:
    def __init__(self, master):
        self.master = master
        master.title("Final Ciencias II")

        self.miFrame = Frame(root, width=1200, height=600)
        self.miFrame.pack()

        self.labelCiudad = Label(self.miFrame, text="Ciudad:")
        self.labelCiudad.grid(row=0, column=0)
        self.cuadroCiudad = Entry(self.miFrame)
        self.cuadroCiudad.grid(row=0, column=1)

        self.labelCalle = Label(self.miFrame, text="Calle:")
        self.labelCalle.grid(row=1, column=0)
        self.cuadroCalle = Entry(self.miFrame)
        self.cuadroCalle.grid(row=1, column=1)

        self.labelNumero = Label(self.miFrame, text="Número:")
        self.labelNumero.grid(row=2, column=0)
        self.cuadroNumero = Entry(self.miFrame)
        self.cuadroNumero.grid(row=2, column=1)

        self.botonSaludo = Button(
            self.miFrame, text="Buscar", command=self.buscar)
        self.botonSaludo.grid(row=3, column=0)

        self.botonSaludo1 = Button(
            self.miFrame, text="AbrirMaps", command=self.abrirMaps)
        self.botonSaludo1.grid(row=4, column=0)

    def buscar(self):
        if not (self.cuadroCalle.get()) or not (self.cuadroNumero.get()) or not (self.cuadroCiudad.get()):
            self.labelResultado = Label(self.miFrame,text='Complete los campos.')

            self.botonSaludo.grid(row=3, column=0)
            self.botonSaludo1.grid(row=4, column=0)
            self.labelResultado.grid(row=5,column=0)

            self.ocultar()
            datosMaps.clear()

            
        else:
            r=CalculoRutas.Inicializar(self.cuadroCiudad.get(), self.cuadroCalle.get(), str(abs(int(self.cuadroNumero.get()))))
            if r != None:
                self.botonSaludo.grid(row=3, column=0)
                self.botonSaludo1.grid(row=4, column=0)
                print(r)
                datosMaps[0]=r[0]
                datosMaps[1]=r[1]
                datosMaps[2]=r[3]
                self.labelOrigen = Label(self.miFrame,text = 'Origen: ' + r[0].capitalize())
                self.labelDestino = Label(self.miFrame,text = 'Destino: ' + r[1])
                self.labelDireccion = Label(self.miFrame,text = 'Direccion Destino: ' + r[2])
                self.labelAuto = Label(self.miFrame,text = 'Auto [Duracion: ' + r[4] + ', Distancia: ' + r[5] +']')
                self.labelCaminando = Label(self.miFrame,text = 'Caminando [Duración: ' + r[6] + ', Distancia: ' + r[7])
                self.labelTiempoRespuesta = Label(self.miFrame,text = 'Respuesta' + r[8])
                #self.labelResultado = Label(self.miFrame, text=CalculoRutas.Inicializar(
                #    self.cuadroCiudad.get(), self.cuadroCalle.get(), self.cuadroNumero.get()))
                self.labelOrigen.grid(row=5, column=0)
                self.labelDestino.grid(row=6, column=0)
                self.labelDireccion.grid(row=7, column=0)
                self.labelAuto.grid(row=8, column=0)
                self.labelCaminando.grid(row=9, column=0)
                self.labelTiempoRespuesta.grid(row=10, column=0)

            else:
                self.ocultar()
                datosMaps.clear()
                self.botonSaludo.grid(row=3, column=0)
                self.botonSaludo1.grid(row=4, column=0)
                self.labelResultado = Label(self.miFrame,text='No se encontró el domicilio')
                self.labelResultado.grid(row=5,column=0)
                


    def abrirMaps(self):
        if len(datosMaps)==0:
            self.botonSaludo.grid(row=3, column=0)
            self.botonSaludo1.grid(row=4, column=0)
            self.labelResultado = Label(self.miFrame,text='No se encontró el domicilio')
            self.labelResultado.grid(row=5,column=0)
        elif not (self.cuadroCalle.get()) or not (self.cuadroNumero.get()) or not (self.cuadroCiudad.get()):
            self.labelResultado = Label(self.miFrame,text='Complete los campos.')

            self.botonSaludo.grid(row=3, column=0)
            self.botonSaludo1.grid(row=4, column=0)
            self.labelResultado.grid(row=5,column=0)
        else:
            CalculoRutas.abrir_maps(datosMaps[0],datosMaps[1],datosMaps[2])



    
    def ocultar(self):
        self.labelOrigen.grid_remove()
        self.labelDestino.grid_remove()
        self.labelDireccion.grid_remove()
        self.labelAuto.grid_remove()
        self.labelCaminando.grid_remove()
        self.labelTiempoRespuesta.grid_remove()
        

root = Tk()
root.geometry("1200x600")

miVentana = VentanaEjemplo(root)
root.mainloop()
